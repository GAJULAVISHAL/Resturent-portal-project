// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String   // Hashed password
  role     Role     @default(CUSTOMER) // Enum for roles
  createdAt DateTime @default(now())
}

model MenuItem {
  id          Int       @id @default(autoincrement())
  name        String?
  price       Int
  imageUrl    String?
  category    Category  
  isAvailable Boolean    @default(true)
  createdAt   DateTime   @default(now())
  orderItems  OrderItem[] // One-to-many relationship with OrderItem
}

model Order {
  id         Int          @id @default(autoincrement())
  table_number Int
  status     OrderStatus   @default(PENDING) // Enum for order status
  items      OrderItem[]   // One-to-many relationship with OrderItem, representing the items associated with an order
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  order_id    Int
  order       Order     @relation(fields: [order_id], references: [id]) // Define relation to Order
  menu_item_id Int
  menuItem     MenuItem  @relation(fields: [menu_item_id], references: [id]) // Define relation to MenuItem
  quantity   Int       @default(1)
}

enum Role {
  ADMIN
  WAITER
  KITCHEN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  READY
  SERVED
}

enum Category {
  JUICE
  MILKSHAKE
  SMOOTHIE
  SALAD
  SHARJAH
  LASSI
  MOJITO
  FALOODA
  CHAAT
  FRIES
}